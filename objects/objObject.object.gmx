<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icoParent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables
///This code sets GM's built in variables to 0
///becase we'll be using vx, vy, grav instead
image_speed = 0;
hspeed = 0;
vspeed = 0;
gravity = 0;
friction = 0;
image_xscale = 1;
image_yscale = 1;
///position/movement variables
vx = 0;
vx_max = 10;
vy = 0;
vy_max = 10;
cx = 0; //cx and cy are used for non-full pixel movement
cy = 0;
///image and animation variables
image_spd = 0;
xscale = 1;
yscale = 1;
///variable for falling through semi-solid platforms
fallthrough = false;
///collide with blocks?
collide = true;

  

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement &amp; animation
var s = objControl.game_speed;
image_index += image_spd*s;
if (image_index &gt; image_number)
{
    image_index -= image_number;
}

//Check if this object can collide
if (collide)
{
    //This is for inter-pixel movement
    cx += vx;
    cy += vy;
    var vxNew = floor(cx);
    var vyNew = floor(cy);
    cx -= vxNew;
    cy -= vyNew;
    
    //Vertical
    repeat(abs(vyNew))
    {
        var svy = sign(vyNew);
        if (check_collision(0, svy))
        {
            vy = 0;
            break;
        }
        else
        {
            y += svy*s;
        }
    }
    
    //Horizontal
    repeat(abs(vxNew))
    {
        var svx = sign(vxNew);
        var collision_x = x+svx;
        
        //Move up slope
        if (place_meeting(collision_x, y, objSolid) &amp;&amp;
            !place_meeting(collision_x, y-1, objSolid))
        {
            --y;
            vx *= 1-(0.14*s);
        }
        
        //Move down slope
        if (!place_meeting(collision_x, y, objSolid) &amp;&amp;
            !place_meeting(collision_x, y+1, objSolid) &amp;&amp;
            place_meeting(collision_x, y+2, objSolid))
        {
            ++y;
        }
        
        if (place_meeting(collision_x, y, objSolid))
        {
            vx = 0;
            break;
        }
        else
        {
            x += svx*s;
        }
    }
}
else
//If this object doesn't collide, then just move
{
    x += vx*s;
    y += vy*s;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
